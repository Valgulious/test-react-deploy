{"version":3,"sources":["img/logo.svg","components/header/HeaderIcon.jsx","img/bell.svg","img/logout.svg","components/header/HeaderWrapper.jsx","img/avatar.jpg","img/dashboard.svg","img/users.svg","img/products.svg","img/authentication.svg","img/typography.svg","img/icons_and_images.svg","img/support.svg","img/menu.svg","components/aside/AsideWrapper.jsx","components/Hr.jsx","components/main/ProfileSection.jsx","components/main/forms/SettingsFormInput.jsx","components/main/forms/FormHeader.jsx","components/main/forms/FormButton.jsx","components/main/forms/SettingsForm.jsx","img/check.svg","components/main/forms/NotificationsFormInput.jsx","components/main/forms/FormFooter.jsx","components/main/forms/NotificationsForm.jsx","img/portlet.jpg","components/main/Profile.jsx","components/main/AnotherTab.jsx","components/main/MainWrapper.jsx","components/App.js","reportWebVitals.js","index.js"],"names":["HeaderIcon","styled","img","HeaderWrapper","Header","header","Logo","div","Title","p","href","src","logo","alt","bell","logout","AsideWrapper","Aside","aside","AvatarWrapper","AvatarImg","Username","UserPosition","AsideHR","hr","Support","AsideNav","nav","AsideListItem","span","AsideLI","li","MenuIcon","asideRef","useRef","isClick","menu","onClick","current","style","left","ref","avatar","id","dashboard","users","products","authentication","typography","icons_and_images","support","Hr","ProfileSection","section","SettingsFormInput","forwardRef","name","type","placeholder","isRequired","onChange","onBlur","mq","map","bp","Input","input","Label","label","required","htmlFor","FormHeader","title","info","h3","Info","FormButton","buttonText","isDisabled","Button","value","disabled","SettingsForm","firstNameRef","lastNameRef","emailRef","phoneNumberRef","cityRef","countryRef","buttonRef","submitMessageRef","emailSpanRef","emailValidation","test","handleChange","e","firstNameIsInvalid","lastNameIsInvalid","target","textContent","emailIsValid","Fieldset","fieldset","InputWrapper","InputSpan","Footer","footer","SubmitMessage","onSubmit","preventDefault","formData","FormData","entries","pair","console","log","Math","round","random","color","setTimeout","emailValue","NotificationsFormInput","inputId","text","subtext","check","toLowerCase","defaultProps","FormFooter","buttonIsDisabled","NotificationsForm","FieldsetSection","FieldsetSectionTitle","h5","Profile","Grid","Column","PortletSection","PortletSectionDiv","PortletInfo","PortletImg","PortletName","PortletCity","PortletTime","time","PortletButtons","PortletButton","button","props","portlet","AnotherTab","h1","MainWrapper","Main","main","MainNav","MainNavLi","isActive","useState","tab","setTab","handleTabClick","App","Inline","styles","css","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2bcaaef.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.88a1e160.svg\";","import styled from \"@emotion/styled\";\n\nconst HeaderIcon = styled.img`\n        width: 20px;\n        height: 20px;\n        padding: 5px;\n        margin: 0 5px;\n        border-radius: 2px;\n        cursor: pointer;\n        &:hover {\n            background-color: #3c4a97\n        }\n    `\n\nexport default HeaderIcon","export default __webpack_public_path__ + \"static/media/bell.a60d00f3.svg\";","export default __webpack_public_path__ + \"static/media/logout.857746e6.svg\";","import styled from \"@emotion/styled\";\nimport logo from \"../../img/logo.svg\";\nimport HeaderIcon from \"./HeaderIcon\";\nimport bell from \"../../img/bell.svg\";\nimport logout from \"../../img/logout.svg\";\n\nconst HeaderWrapper = () => {\n\n    const Header = styled.header`\n        padding: 10px;\n        color: white;\n        background-color: #3f51b5;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        max-height: 64px;\n        \n        & a {\n            text-decoration: none;\n            @media (max-width: 575px) {\n                margin-left: 50px;\n            }\n        }\n    `\n\n    const Logo = styled.div`\n        display: flex;\n        justify-content: space-around;\n        align-items: center;\n    `\n\n    const Title = styled.p`\n        color: white;\n        font-weight: 500;\n        font-size: 20px;\n        line-height: 24px;\n        letter-spacing: -0.0555556px;\n        margin: 5px 0 5px 10px;\n    `\n\n    return (\n        <Header>\n            <a href=\"#\">\n                <Logo>\n                    <img src={logo} alt=\"logo\"/>\n                    <Title>Devias Kit</Title>\n                </Logo>\n            </a>\n            <div>\n                <HeaderIcon src={bell} alt='notifications'/>\n                <HeaderIcon src={logout} alt='logout'/>\n            </div>\n        </Header>\n    );\n}\n\nexport default HeaderWrapper","export default __webpack_public_path__ + \"static/media/avatar.7b006f67.jpg\";","export default __webpack_public_path__ + \"static/media/dashboard.b8c7234c.svg\";","export default __webpack_public_path__ + \"static/media/users.9621f8b5.svg\";","export default __webpack_public_path__ + \"static/media/products.fa3fa27f.svg\";","export default __webpack_public_path__ + \"static/media/authentication.af1ca6eb.svg\";","export default __webpack_public_path__ + \"static/media/typography.b91af937.svg\";","export default __webpack_public_path__ + \"static/media/icons_and_images.4b8ddd5d.svg\";","export default __webpack_public_path__ + \"static/media/support.53f602f2.svg\";","export default __webpack_public_path__ + \"static/media/menu.d9e01dbf.svg\";","import avatar from '../../img/avatar.jpg'\nimport dashboard from '../../img/dashboard.svg'\nimport users from '../../img/users.svg'\nimport products from '../../img/products.svg'\nimport authentication from '../../img/authentication.svg'\nimport typography from '../../img/typography.svg'\nimport icons_and_images from '../../img/icons_and_images.svg'\nimport support from '../../img/support.svg'\nimport menu from '../../img/menu.svg'\nimport styled from \"@emotion/styled\";\nimport {useRef} from \"react\";\n\nconst AsideWrapper = () => {\n\n    const Aside = styled.aside`\n        min-height: calc(100vh - 64px);\n        box-shadow: 1px 0 3px rgba(0, 0, 0, 0.25);\n        z-index: 1;\n        \n        @media (max-width: 575px) {\n            width: 100%;\n            position: absolute;\n            background: white;\n            top: 0;\n            bottom: 0;\n            left: -600px;\n            transition: left 250ms ease;\n        }\n        \n        @media (min-width: 576px) {\n            width: 30%;\n        }\n        \n        @media (min-width: 992px) {\n            width: 20%;\n        }\n      \n        @media (min-width: 1400px) {\n            width: 15%;\n        }\n    `\n\n    const AvatarWrapper = styled.div`\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n    `\n\n    const AvatarImg = styled.img`\n        border-radius: 50%;\n        width: 100px;\n        height: 100px;\n        margin: 20px 0 10px 0;\n    `\n\n    const Username = styled.p`\n        margin: 5px;\n        font-weight: normal;\n        font-size: 16px;\n        line-height: 20px;\n        text-align: center;\n        letter-spacing: -0.05px;\n        color: #3A3B3F;\n    `\n\n    const UserPosition = styled.p`\n        margin-bottom: 20px;\n        font-weight: normal;\n        font-size: 12px;\n        line-height: 16px;\n        text-align: center;\n        color: #9EA0A5;\n    `\n\n    const AsideHR = styled.hr`\n        background-color: #E4E7EB;\n        border: 0 none;\n        height: 1px;\n        width: 100%;\n        clear:both;\n        margin: auto;\n    `\n\n    const Support = styled.p`\n        margin: 24px 16px 10px 16px;\n        font-size: 13px;\n        line-height: 15px;\n        color: rgba(0, 0, 0, 0.328974);\n    `\n\n    const AsideNav = styled.nav`\n        padding: 10px;\n    `\n\n    const AsideListItem = styled.span`\n        margin-left: 10px;\n        font-size: 14px;\n        line-height: 20px;\n        letter-spacing: -0.05px;\n        color: #66788A;\n    `\n\n    const AsideLI = styled.li`\n        list-style: none;\n        padding: 10px 16px;\n        margin: 0 0 10px 0;\n        display: flex;\n        align-items: center;\n        \n        &:hover {\n            background: #F6F9FD;\n            box-shadow: inset 3px 0 0 #1665D8;\n            border-radius: 4px 0 0 4px;\n            cursor: pointer;\n        }\n        \n        &:focus {\n            background: #F6F9FD;\n            box-shadow: inset 3px 0 0 #1665D8;\n            border-radius: 4px 0 0 4px;\n            cursor: pointer;\n        }\n        \n        &:hover span {\n            color: #212529;\n        }\n    `\n\n    const MenuIcon = styled.img`\n        display: none;\n        position: absolute;\n        top: -40px;\n        width: 20px;\n        height: 20px;\n        padding: 5px;\n        margin: 0 5px;\n        border-radius: 2px;\n        cursor: pointer;\n        &:hover {\n            background-color: #3c4a97\n        }\n\n      @media (max-width: 575px) {\n        display: block;\n      }\n    `\n\n    const asideRef = useRef(null);\n\n    let isClick = false;\n\n    const handleMenuClick = () => {\n        if (isClick) {\n            asideRef.current.style.left = '-600px';\n            isClick = !isClick;\n        } else {\n            asideRef.current.style.left = '0';\n            isClick = !isClick;\n        }\n    }\n\n    return (\n        <>\n            <MenuIcon src={menu} alt='menu' onClick={handleMenuClick}/>\n            <Aside ref={asideRef}>\n                <AvatarWrapper>\n                    <div>\n                        <AvatarImg src={avatar} alt='avatar' />\n                    </div>\n                    <div>\n                        <Username>Roman Kuterov</Username>\n                        <UserPosition>Brain Director</UserPosition>\n                    </div>\n                </AvatarWrapper>\n                <AsideNav>\n                    <AsideHR/>\n                    <ul>\n                        <AsideLI>\n                            <img id='dash' src={dashboard} alt='dashboard'/>\n                            <AsideListItem>Dashboard</AsideListItem>\n                        </AsideLI>\n                        <AsideLI>\n                            <img src={users} alt='users'/>\n                            <AsideListItem>Users</AsideListItem>\n                        </AsideLI>\n                        <AsideLI>\n                            <img src={products} alt='products'/>\n                            <AsideListItem>Products</AsideListItem>\n                        </AsideLI>\n                        <AsideLI>\n                            <img src={authentication} alt='authentication'/>\n                            <AsideListItem>Authentication</AsideListItem>\n                        </AsideLI>\n                        <AsideLI>\n                            <img src={typography} alt='typography'/>\n                            <AsideListItem>Typography</AsideListItem>\n                        </AsideLI>\n                        <AsideLI>\n                            <img src={icons_and_images} alt='icons_and_images'/>\n                            <AsideListItem>Icons & Images</AsideListItem>\n                        </AsideLI>\n                    </ul>\n                    <AsideHR/>\n                    <div>\n                        <Support>Support</Support>\n                        <AsideLI>\n                            <img src={support} alt='support'/>\n                            <AsideListItem>Support</AsideListItem>\n                        </AsideLI>\n                    </div>\n                </AsideNav>\n            </Aside>\n        </>\n    )\n}\n\nexport default AsideWrapper","import styled from \"@emotion/styled\";\n\nconst Hr = styled.hr`\n        background-color: #E4E7EB;\n        border: 0px none;\n        height: 1px;\n        clear:both;\n    `\n\nexport default Hr","import styled from \"@emotion/styled\";\n\nconst ProfileSection = styled.section`\n        border-radius: 5px;\n        box-shadow: 0 0 3px 1px rgba(0, 0, 0, 0.25);\n        background-color: white;\n        margin: 20px 0 0 20px;\n    `\n\nexport default ProfileSection\n","import PropTypes from 'prop-types'\nimport styled from \"@emotion/styled\";\nimport {forwardRef} from \"react\";\n\n\nconst SettingsFormInput = forwardRef(({id, name, type, placeholder, isRequired, onChange, onBlur}, ref) => {\n\n    const breakpoints = [576, 768, 992, 1430];\n\n    const mq = breakpoints.map(\n        bp => `@media (min-width: ${bp}px)`\n    )\n\n    const Input = styled.input`\n        \n        margin: 15px 5px 5px 20px;\n        padding-left: 15px;\n        height: 56px;\n        border: 1px solid rgba(0, 0, 0, 0.32);\n        box-sizing: border-box;\n        border-radius: 4px;\n        \n        font-weight: normal;\n        font-size: 16px;\n        line-height: 24px;\n        letter-spacing: 0.15px;\n        color: rgba(0, 0, 0, 0.6);\n        \n        &:focus {\n            outline: none !important;\n            border: 2px solid #1665D8;\n        }\n        \n        &:focus + label {\n            display: block;\n        }\n        \n        &:required:focus ~ span {\n            color: #1665D8;\n        }  \n        \n         ${mq[2]} {\n           width: 328px;\n        }\n         \n         ${mq[2]} {\n            width: 90%;\n        }\n        \n        ${mq[3]} {\n            width: 328px;\n        }\n              \n    `\n\n    const Label = styled.label`\n        font-weight: normal;\n        font-size: 12px;\n        line-height: 16px;\n        letter-spacing: 0.4px;\n        color: #1665D8;\n        \n        display: none;\n        position: absolute;\n        top: 8px;\n        left: 30px;\n        background-color: white;\n    `\n\n    return (\n        <>\n            <Input ref={ref} id={id} name={name} type={type} placeholder={placeholder} required={isRequired}\n                   onChange={onChange} onBlur={onBlur}/>\n            <Label htmlFor={id}>{placeholder}</Label>\n        </>\n    )\n});\n\nSettingsFormInput.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    isRequired: PropTypes.bool,\n    onChange: PropTypes.func,\n    onBlur: PropTypes.func\n}\n\nexport default SettingsFormInput","import PropTypes from 'prop-types'\nimport styled from \"@emotion/styled\";\n\n\nconst FormHeader = ({title, info}) => {\n\n    const Header = styled.header`\n        padding: 20px 20px;\n        display: flex;\n        align-items: center;\n    `\n\n    const Title = styled.h3`\n        font-weight: 500;\n        font-size: 16px;\n        line-height: 20px;\n        letter-spacing: -0.05px;\n        color: #3A3B3F;\n    `\n\n    const Info = styled.p`\n        margin-left: 15px;\n        font-weight: 300;\n        font-size: 14px;\n        line-height: 16px;\n        color: #66788A;\n    `\n\n    return(\n        <Header>\n            <Title>{title}</Title>\n            <Info>{info}</Info>\n        </Header>\n    )\n\n}\n\nFormHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n    info: PropTypes.string.isRequired\n}\n\nexport default FormHeader","import PropTypes from 'prop-types'\nimport styled from \"@emotion/styled\";\nimport {forwardRef} from \"react\";\n\nconst FormButton = forwardRef(({buttonText, isDisabled}, ref) => {\n\n    const Button = styled.input`\n        padding: 10px 20px;\n        outline: none;\n        border: none;\n        cursor: pointer;\n        color: white;\n        background: #1665D8;\n        box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.14), 0px 2px 1px rgba(0, 0, 0, 0.12), 0px 1px 3px rgba(0, 0, 0, 0.2);\n        border-radius: 5px;\n        box-sizing: border-box;\n        font-weight: 500;\n        font-size: 14px;\n        line-height: 16px;\n        text-align: center;\n        letter-spacing: 1.25px;\n        text-transform: uppercase;\n        \n        transition: transform 100ms ease;\n        \n        &:not(:disabled):hover {\n            transform: scale(1.05)\n        }\n        \n        &:not(:disabled):focus {\n            transform: scale(1.05)\n        }\n        \n        &:disabled {\n            color: #1665D8;\n            background: rgba(98, 2, 238, 0.0001);\n            border: 1px solid rgba(22, 101, 216, 0.1);\n            box-shadow: none;\n            cursor: default;\n        }\n        \n        // &:disabled:hover {\n        //     transform: none;\n        // }\n    `\n\n    return(\n        <Button ref={ref} type='submit' value={buttonText} disabled={isDisabled}/>\n    )\n\n})\n\nFormButton.propTypes = {\n    buttonText: PropTypes.string.isRequired,\n    isDisabled: PropTypes.bool\n}\n\nexport default FormButton;","import styled from \"@emotion/styled\";\nimport ProfileSection from \"../ProfileSection.jsx\";\nimport SettingsFormInput from \"./SettingsFormInput.jsx\";\nimport FormHeader from \"./FormHeader.jsx\";\nimport FormButton from \"./FormButton.jsx\";\nimport Hr from '../../Hr.jsx'\nimport {useRef} from \"react\";\n\n\nconst SettingsForm = () => {\n\n    const firstNameRef = useRef(null);\n    const lastNameRef = useRef(null);\n    const emailRef = useRef(null);\n    const phoneNumberRef = useRef(null);\n    const cityRef = useRef(null);\n    const countryRef = useRef(null);\n\n    const buttonRef = useRef(null);\n    const submitMessageRef = useRef(null);\n\n    const emailSpanRef = useRef(null);\n\n    const emailValidation = (value) => {\n        const regEmail = /\\S+@\\S+\\.\\S+/;\n\n        return regEmail.test(value);\n    }\n\n    const handleChange = (e) => {\n        let firstNameIsInvalid = firstNameRef.current.value === '';\n        let lastNameIsInvalid = lastNameRef.current.value === '';\n\n        if ('email' === e.target.id) emailSpanRef.current.textContent = '';\n\n        let emailIsValid = emailValidation(emailRef.current.value);\n\n        buttonRef.current.disabled = firstNameIsInvalid || lastNameIsInvalid || !emailIsValid;\n    }\n\n    const handleEmailBlur = () => {\n        const emailValue = emailRef.current.value;\n        if (emailValidation(emailValue)) {\n            emailSpanRef.current.textContent = '';\n        } else {\n            emailSpanRef.current.textContent = 'Incorrect email. Example: example@example.com';\n            emailSpanRef.current.style.color = 'red';\n        }\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        const formData = new FormData(e.target);\n\n        for (let pair of formData.entries()) {\n            console.log(pair[0] + ': ' + pair[1]);\n        }\n\n        if(Math.round(Math.random())) {\n            submitMessageRef.current.textContent = 'Saved';\n            submitMessageRef.current.style.color = 'green';\n\n            firstNameRef.current.value = '';\n            lastNameRef.current.value = '';\n            emailRef.current.value = '';\n            phoneNumberRef.current.value = '';\n            cityRef.current.value = '';\n            countryRef.current.value = '';\n\n            buttonRef.current.disabled = true;\n\n            setTimeout(() => {\n                submitMessageRef.current.textContent = '';\n            }, 5000);\n        } else {\n            submitMessageRef.current.textContent = 'Error. Try again';\n            submitMessageRef.current.style.color = 'red';\n        }\n    }\n\n    const Fieldset = styled.fieldset`\n        border: none;\n        display: flex;\n        flex-wrap: wrap;\n        padding-bottom: 10px;\n    `\n\n    const breakpoints = [576, 768, 992, 1430];\n\n    const mq = breakpoints.map(\n        bp => `@media (min-width: ${bp}px)`\n    )\n\n    const InputWrapper = styled.div`\n        width: 95%;\n        display: flex;\n        flex-direction: column;\n        position: relative;\n        \n        ${mq[0]} {\n            width: 49%;\n        }\n        \n        ${mq[2]} {\n            width: 100%;\n        }\n        \n        ${mq[3]} {\n            width: auto;\n        }\n    `\n\n    const InputSpan = styled.span`\n        margin-left: 30px;\n        font-weight: normal;\n        font-size: 12px;\n        line-height: 16px;\n        letter-spacing: 0.4px;\n        color: rgba(0, 0, 0, 0.6);\n    `\n\n    const Footer = styled.footer`\n        padding: 20px;\n        display: flex;\n        align-items: center;\n    `\n\n    const SubmitMessage = styled.span`\n        font-weight: normal;\n        font-size: 12px;\n        line-height: 16px;\n        letter-spacing: 0.4px;\n        \n        margin-left: 20px;\n    `\n\n    return (\n        <ProfileSection>\n            <form onSubmit={handleSubmit}>\n                <FormHeader title='Basic Profile' info='The information can be edited from your profile page'/>\n                <Hr/>\n                <Fieldset>\n                    <InputWrapper>\n                        <SettingsFormInput ref={firstNameRef} id='firstName' name='firstName' type='text'\n                                           placeholder='First Name' isRequired={true}\n                                           onChange={handleChange} key='firstName'/>\n                        <InputSpan>Please specify the first name</InputSpan>\n                    </InputWrapper>\n                    <InputWrapper>\n                        <SettingsFormInput ref={lastNameRef} id='lastName' name='lastName' type='text'\n                                           placeholder='Last Name' isRequired={true} onChange={handleChange} key='lastName'/>\n                        <InputSpan>Assistive text</InputSpan>\n                    </InputWrapper>\n                    <InputWrapper>\n                        <SettingsFormInput ref={emailRef} id='email' name='email' type='email' placeholder='Email'\n                                           isRequired={true} onChange={handleChange} onBlur={handleEmailBlur} key='email'/>\n                        <InputSpan ref={emailSpanRef}>{''}</InputSpan>\n                    </InputWrapper>\n                    <InputWrapper>\n                        <SettingsFormInput ref={phoneNumberRef} id='phoneNumber' name='phoneNumber' type='tel'\n                                           placeholder='Phone Number' key='phone'/>\n                    </InputWrapper>\n                    <InputWrapper>\n                        <SettingsFormInput ref={cityRef} id='city' name='city' type='text' placeholder='City' key='city'/>\n                    </InputWrapper>\n                    <InputWrapper>\n                        <SettingsFormInput ref={countryRef} id='country' name='country' type='text'\n                                           placeholder='Country' key='country'/>\n                    </InputWrapper>\n                </Fieldset>\n                <Hr/>\n                <Footer>\n                    <FormButton ref={buttonRef} buttonText='SAVE SETTINGS' isDisabled={true}/>\n                    <SubmitMessage ref={submitMessageRef}>{''}</SubmitMessage>\n                </Footer>\n            </form>\n        </ProfileSection>\n    )\n\n}\n\nexport default SettingsForm","export default __webpack_public_path__ + \"static/media/check.d37d4194.svg\";","import PropTypes from 'prop-types'\nimport styled from \"@emotion/styled\";\nimport check from '../../../img/check.svg'\n\nconst NotificationsFormInput = ({inputId, name, text, value, subtext}) => {\n\n    const Input = styled.input`\n        position: absolute;\n        z-index: -1;\n        opacity: 0;\n    `\n\n    const Label = styled.label`\n        display: flex;\n        align-items: start;\n        margin: 20px 0 0 0;\n        \n        font-weight: normal;\n        font-size: 16px;\n        line-height: 24px;\n        letter-spacing: 0.15px;\n        color: rgba(0, 0, 0, 0.6);\n        \n        & > span::before {\n            position: relative;\n            top: 0.3em;\n            content: '';\n            display: inline-block;\n            width: 1em;\n            height: 1em;\n            flex-shrink: 0;\n            flex-grow: 0;\n            border: 2px solid #425A70;\n            border-radius: 0.25em;\n            margin-right: 0.5em;\n            background-repeat: no-repeat;\n            background-position: center center;\n            background-size: 50% 50%; \n        }\n        \n        & > input:not(:disabled):not(:checked) + span:hover::before {\n            border-color: #b3d7ff;\n        }\n        \n        & > input:focus + span::before {\n            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\n        }\n        \n        & > input:focus:not(:checked) + span::before {\n            border-color: #80bdff;\n        }\n        \n        & > input:checked + span::before {\n            border-color: #2c65d8;\n            background-color: white;\n            background-image: url(${check});\n            background-size: 100%;\n        }\n        \n        & + span {\n            font-weight: normal;\n            font-size: 12px;\n            line-height: 14px;\n            color: #66788A;\n            margin-left: 30px;\n        }\n    `\n\n    return(\n        <>\n            <Label htmlFor={inputId}>\n                <Input id={inputId} type='checkbox' name={name} value={value.toLowerCase()}/>\n                <span>{text}</span>\n            </Label>\n            {subtext ? <span>{subtext}</span> : ''}\n        </>\n    )\n}\n\nNotificationsFormInput.defaultProps = {\n    subtext: ''\n}\n\nNotificationsFormInput.propTypes = {\n    inputId: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired\n}\n\nexport default NotificationsFormInput;","import PropTypes from 'prop-types'\nimport styled from \"@emotion/styled\";\nimport FormButton from \"./FormButton.jsx\";\n\n\nconst FormFooter = ({buttonText, buttonIsDisabled}) => {\n\n    const Footer = styled.footer`\n        padding: 20px;\n    `\n\n    return(\n        <Footer>\n            <FormButton buttonText={buttonText} isDisabled={buttonIsDisabled}/>\n        </Footer>\n    )\n\n}\n\nFormFooter.propTypes = {\n    buttonText: PropTypes.string.isRequired,\n    buttonIsDisabled: PropTypes.bool\n}\n\nexport default FormFooter","import styled from \"@emotion/styled\";\nimport ProfileSection from \"../ProfileSection.jsx\";\nimport NotificationsFormInput from \"./NotificationsFormInput.jsx\";\nimport FormHeader from \"./FormHeader\";\nimport FormFooter from \"./FormFooter.jsx\";\nimport Hr from '../../Hr.jsx'\n\nconst NotificationsForm = () => {\n\n    const Fieldset = styled.fieldset`\n        border: none;\n        display: flex;\n        flex-wrap: wrap;\n    `\n\n    const FieldsetSection = styled.section`\n        margin: 20px;\n        display: flex;\n        flex-direction: column;\n    `\n\n    const FieldsetSectionTitle = styled.h5`\n        color: #3A3B3F;\n        font-weight: 500;\n        font-size: 16px;\n        line-height: 20px;\n        letter-spacing: -0.05px;\n    `\n\n    return(\n        <ProfileSection>\n            <form>\n                <FormHeader title='Notifications' info='Mange the notifications emailing'/>\n                <Hr/>\n                <Fieldset>\n                    <FieldsetSection>\n                        <FieldsetSectionTitle>Notifications</FieldsetSectionTitle>\n                        <NotificationsFormInput text='Email' value='email' name='notifications' inputId='nEmail'/>\n                        <NotificationsFormInput text='Push Notifications' value='pushNotifications' name='notifications'\n                                                inputId='nPushNotifications' subtext='For your mobile or tablet device'/>\n                        <NotificationsFormInput text='Text Messages' value='textMessages' name='notifications'\n                                                inputId='nTextMessages'/>\n                        <NotificationsFormInput text='Phone Calls' value='phoneCalls' name='notifications'\n                                                inputId='nPhoneCalls'/>\n                    </FieldsetSection>\n                    <FieldsetSection>\n                        <FieldsetSectionTitle>Messages</FieldsetSectionTitle>\n                        <NotificationsFormInput text='Email' value='email' name='messages' inputId='mEmail'/>\n                        <NotificationsFormInput text='Push Notifications' value='pushNotifications' name='messages'\n                                                inputId='mPushNotifications'/>\n                        <NotificationsFormInput text='Text Messages' value='textMessages' name='messages'\n                                                inputId='mTextMessages'/>\n                    </FieldsetSection>\n                </Fieldset>\n                <Hr/>\n                <FormFooter buttonText='SAVE' buttonIsDisabled={true}/>\n            </form>\n        </ProfileSection>\n    )\n\n}\n\nexport default NotificationsForm;","export default __webpack_public_path__ + \"static/media/portlet.af85f18f.jpg\";","import styled from \"@emotion/styled\";\nimport Hr from \"../Hr.jsx\"\nimport SettingsForm from \"./forms/SettingsForm.jsx\";\nimport NotificationsForm from \"./forms/NotificationsForm.jsx\";\nimport portlet from '../../img/portlet.jpg'\n\nconst Profile = () => {\n\n    const breakpoints = [576, 768, 992, 1200, 1430, 1750, 2250];\n\n    const mq = breakpoints.map(\n        bp => `@media (min-width: ${bp}px)`\n    )\n\n    const Grid = styled.div`    \n        \n        display: grid;\n        \n        ${mq[0]} {\n            grid-template: 1fr / 1fr\n        }\n        \n        ${mq[2]} {\n            grid-template: 1fr / 40% 50%\n        }\n        \n        ${mq[3]} {\n            grid-template: 1fr / 35% 60%\n        }\n        \n        ${mq[4]} {\n            grid-template: 1fr / 30% 60%\n        }\n        \n        ${mq[5]} {\n            grid-template: 1fr / 25% 55% 1fr\n        }\n        \n        ${mq[6]} {\n            max-width: 80%;\n            margin: auto;\n            grid-template: 1fr / 25% 55% 1fr\n        }\n    `\n\n    const Column = styled.div`\n        padding: 20px 20px 20px 0;\n    `\n\n    const PortletSection = styled.section`\n        border-radius: 5px;\n        box-shadow: 0 0 3px 1px rgba(0, 0, 0, 0.25);\n        background-color: white;\n        margin: 20px 0 0 20px;\n        \n        ${mq[0]} {\n            width: 95%;\n        }\n        \n        ${mq[1]} {\n            width: 70%;\n        }\n        \n        ${mq[2]} {\n            width: 100%;\n        }\n    `\n\n    const PortletSectionDiv = styled.div`\n        padding: 24px;\n        display: flex;\n        justify-content: space-between;\n    `\n\n    const PortletInfo = styled.div`\n        display: flex;\n        flex-direction: column;\n        justify-content: start;\n        align-items: start;\n    `\n\n    const PortletImg = styled.img`\n        border-radius: 10%;\n        width: 140px;\n        height: 140px;\n    `\n\n    const PortletName = styled.p`\n        margin-bottom: 10px;\n        font-style: normal;\n        font-weight: 500;\n        font-size: 24px;\n        line-height: 28px;\n        letter-spacing: -0.06px;\n        color: #212529;\n    `\n\n    const PortletCity = styled.span`\n        font-weight: normal;\n        font-size: 14px;\n        line-height: 20px;\n        text-align: center;\n        letter-spacing: -0.05px;\n        color: #9EA0A5;\n    `\n\n    const PortletTime = styled.time`\n        font-weight: normal;\n        font-size: 14px;\n        line-height: 20px;\n        text-align: center;\n        letter-spacing: -0.05px;\n        color: #9EA0A5;\n    `\n\n    const PortletButtons = styled.div`\n        display: flex;\n        justify-content: space-around;\n        padding: 20px 10px;\n    `\n\n    const PortletButton = styled.button`\n    \n        &:hover {\n            transform: scale(1.05)\n        }\n    \n        padding: 0;\n        border: none;\n        font-size: 12px;\n        line-height: 16px;\n        text-align: center;\n        letter-spacing: 1.25px;\n        text-transform: uppercase;\n        cursor: pointer;\n        background-color: white;\n        color: ${props => props.color}\n    `\n\n    return(\n        <Grid>\n            <Column>\n                <PortletSection>\n                    <PortletSectionDiv>\n                        <PortletInfo>\n                            <PortletName>Adrian Stefan</PortletName>\n                            <PortletCity>Rm. Valcea, Romania</PortletCity>\n                            <PortletTime>4:32PM (GMT-4)</PortletTime>\n                        </PortletInfo>\n                        <PortletImg src={portlet} alt='portlet image'/>\n                    </PortletSectionDiv>\n                    <Hr/>\n                    <PortletButtons>\n                        <PortletButton color='#1665D8'>UPLOAD PICTURE</PortletButton>\n                        <PortletButton color='#425A70'>REMOVE PICTURE</PortletButton>\n                    </PortletButtons>\n                </PortletSection>\n            </Column>\n            <Column>\n                <SettingsForm/>\n                <NotificationsForm/>\n            </Column>\n        </Grid>\n    )\n\n}\n\nexport default Profile","import PropTypes from 'prop-types'\nimport styled from \"@emotion/styled\";\n\nconst AnotherTab = ({title}) => {\n\n    const Title = styled.h1`\n        margin: 20px;\n    `\n\n    return (\n        <Title>{title}</Title>\n    )\n\n}\n\nAnotherTab.propTypes = {\n    title: PropTypes.string.isRequired\n}\n\nexport default AnotherTab","import styled from \"@emotion/styled\";\nimport Profile from \"./Profile.jsx\";\nimport Hr from \"../Hr.jsx\"\nimport AnotherTab from \"./AnotherTab.jsx\";\nimport {useState} from \"react\";\n\nconst MainWrapper = () => {\n\n    const Main = styled.main`\n        min-height: 94.5vh;\n        width: 85%;\n        background-color: #f9fafb;\n        \n        @media (min-width: 1200px) {\n            width: 100%;\n        }\n        \n        @media (max-width: 1199px) {\n            width: 100%;\n        }\n    `\n\n    const MainNav = styled.nav`\n        display: flex;\n        max-height: 40px;\n    `\n\n    const MainNavLi = styled.li`\n        list-style: none;\n        padding: 5px 10px;\n        margin: 5px 10px;\n        \n        font-size: 16px;\n        line-height: 20px;\n        letter-spacing: -0.05px;\n        color: #3A3B3F;\n        \n        cursor: pointer;\n        \n        &::after {\n            content: '';\n            display: block;\n            width: 100%;\n            margin-top: 7px;\n            height: 3px;\n            transition: transform 250ms ease;\n            transform: ${props => props.isActive ? 'scaleX(1.5)' : 'scaleX(0)'};\n            background-color: #1665D8;\n        }\n        \n        &:hover {\n            color: #1665D8;\n            &::after {\n                transform: scaleX(1.5);\n            }\n        }\n    `\n\n    const [tab, setTab] = useState('profile');\n\n    const handleTabClick = e => {\n        setTab(e.target.id);\n    }\n\n    return (\n        <Main>\n            <MainNav>\n                <MainNavLi id='profile' isActive={tab === 'profile'} onClick={handleTabClick}>Profile</MainNavLi>\n                <MainNavLi id='account' isActive={tab === 'account'} onClick={handleTabClick}>Account</MainNavLi>\n                <MainNavLi id='price' isActive={tab === 'price'} onClick={handleTabClick}>Price Plans</MainNavLi>\n            </MainNav>\n            <Hr/>\n            {tab === 'profile' ? <Profile/> : ''}\n            {tab === 'account' ? <AnotherTab title='Account'/> : ''}\n            {tab === 'price' ? <AnotherTab title='Price Plans'/> : ''}\n        </Main>\n    )\n}\n\nexport default MainWrapper\n","import HeaderWrapper from \"./header/HeaderWrapper.jsx\";\nimport styled from \"@emotion/styled\";\nimport {css, Global} from \"@emotion/react\";\nimport AsideWrapper from \"./aside/AsideWrapper.jsx\";\nimport MainWrapper from \"./main/MainWrapper.jsx\";\n\n\nfunction App() {\n\n    const Inline = styled.div`\n        display: flex;\n        position: relative;\n    `\n\n  return (\n    <>\n        <Global\n            styles={css`\n                * {\n                    margin: 0;\n                    padding: 0;\n                    font-family: 'Roboto', sans-serif;\n                    font-style: normal;\n                    font-weight: 500;\n                }\n            `}\n        />\n      <HeaderWrapper/>\n      <Inline>\n          <AsideWrapper/>\n          <MainWrapper/>\n      </Inline>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}